
# C:\Sayantan\acads\enee662\proj3\cvx4py\parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.5'

_lr_method = 'LALR'

_lr_signature = 'D03E922964CBEA56CE37A0E51FF63F03'
    
_lr_action_items = {'PLUS':([28,29,31,32,43,46,50,53,55,56,57,58,59,],[-37,-36,-38,48,48,-35,-34,-33,-30,-31,-32,-28,-29,]),'DIVIDE':([28,29,31,32,43,46,50,53,55,56,57,58,59,],[-37,-36,-38,45,45,-35,-34,-33,-30,-31,-32,45,45,]),'NL':([0,2,5,8,11,12,15,16,18,19,20,21,22,23,25,26,27,28,29,31,32,35,36,37,44,46,50,51,53,55,56,57,58,59,62,63,],[-4,-9,13,-10,-13,-18,-4,-4,-4,-21,-14,-15,-16,-27,41,-10,42,-37,-36,-38,44,-20,-26,-19,-11,-35,-34,-17,-33,-30,-31,-32,-28,-29,63,-12,]),'LPAREN':([12,17,30,33,47,48,49,],[24,30,30,30,30,30,30,]),'SEMICOLON':([0,2,5,6,8,11,12,13,14,18,19,20,21,22,23,26,34,35,36,37,41,42,44,51,63,],[-4,-9,14,15,-10,-13,-18,-5,-6,-4,-21,-14,-15,-16,-27,-10,15,-20,-26,-19,-7,-8,-11,-17,-12,]),'SUBJECT':([44,],[54,]),'INT':([17,24,30,33,45,47,48,49,52,],[28,38,28,28,55,28,28,28,60,]),'VARIABLES':([0,1,15,16,18,44,63,],[7,10,7,7,7,-11,-12,]),'FLOAT':([17,30,33,45,47,48,49,],[29,29,29,56,29,29,29,]),'TRANSPOSE':([28,29,31,32,43,46,50,53,55,56,57,58,59,],[-37,-36,-38,46,46,-35,-34,-33,-30,-31,-32,-28,-29,]),'MINUS':([17,28,29,30,31,32,33,43,46,47,48,49,50,53,55,56,57,58,59,],[33,-37,-36,33,-38,49,33,49,-35,33,33,33,-34,-33,-30,-31,-32,-28,-29,]),'TO':([54,],[62,]),'COMMA':([6,13,14,34,38,39,40,41,42,60,61,],[16,-5,-6,16,-24,52,-25,-7,-8,-23,-22,]),'DUAL':([0,15,16,18,44,63,],[1,1,1,1,-11,-12,]),'SENSE':([6,13,14,41,42,],[17,-5,-6,-7,-8,]),'VARIABLE':([0,1,15,16,18,44,63,],[3,9,3,3,3,-11,-12,]),'RPAREN':([24,28,29,31,38,39,40,43,46,50,53,55,56,57,58,59,60,61,],[37,-37,-36,-38,-24,51,-25,53,-35,-34,-33,-30,-31,-32,-28,-29,-23,-22,]),'TIMES':([28,29,31,32,43,46,50,53,55,56,57,58,59,],[-37,-36,-38,47,47,-35,-34,-33,-30,-31,-32,47,47,]),'ID':([3,7,9,10,12,17,19,20,22,23,24,30,33,35,36,37,47,48,49,51,52,],[12,12,21,23,-18,31,-21,12,36,-27,40,31,31,-20,-26,-19,31,31,31,-17,61,]),'$end':([0,4,8,13,14,18,34,41,42,44,63,],[-4,0,-3,-5,-6,-2,-1,-7,-8,-11,-12,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,18,],[6,34,]),'idlist':([10,],[22,]),'create':([0,15,16,18,],[2,2,2,2,]),'dimlist':([24,],[39,]),'program':([0,],[4,]),'statement':([0,15,16,18,],[5,25,27,5,]),'objective':([6,],[18,]),'array':([3,7,20,],[11,19,35,]),'expression':([17,30,33,47,48,49,],[32,43,50,57,58,59,]),'arraylist':([7,],[20,]),'empty':([0,15,16,18,],[8,26,26,26,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements objective statements','program',3,'p_program','cvxParser.py',54),
  ('program -> statements objective','program',2,'p_program','cvxParser.py',55),
  ('program -> empty','program',1,'p_program_empty','cvxParser.py',64),
  ('empty -> <empty>','empty',0,'p_empty','cvxParser.py',68),
  ('statements -> statement NL','statements',2,'p_statements_statement','cvxParser.py',73),
  ('statements -> statement SEMICOLON','statements',2,'p_statements_statement','cvxParser.py',74),
  ('statements -> statements SEMICOLON statement NL','statements',4,'p_statements_many_statement','cvxParser.py',78),
  ('statements -> statements COMMA statement NL','statements',4,'p_statements_many_statement','cvxParser.py',79),
  ('statement -> create','statement',1,'p_statement','cvxParser.py',86),
  ('statement -> empty','statement',1,'p_statement','cvxParser.py',87),
  ('objective -> SENSE expression NL','objective',3,'p_objective','cvxParser.py',95),
  ('objective -> SENSE expression NL SUBJECT TO NL','objective',6,'p_objective','cvxParser.py',96),
  ('create -> VARIABLE array','create',2,'p_create_identifier','cvxParser.py',102),
  ('create -> VARIABLES arraylist','create',2,'p_create_identifiers','cvxParser.py',108),
  ('create -> DUAL VARIABLE ID','create',3,'p_create_dual_variable','cvxParser.py',113),
  ('create -> DUAL VARIABLES idlist','create',3,'p_create_dual_variables','cvxParser.py',118),
  ('array -> ID LPAREN dimlist RPAREN','array',4,'p_array_identifier','cvxParser.py',122),
  ('array -> ID','array',1,'p_array_identifier_scalar','cvxParser.py',127),
  ('array -> ID LPAREN RPAREN','array',3,'p_array_identifier_scalar','cvxParser.py',128),
  ('arraylist -> arraylist array','arraylist',2,'p_arraylist_list','cvxParser.py',134),
  ('arraylist -> array','arraylist',1,'p_arraylist_array','cvxParser.py',138),
  ('dimlist -> dimlist COMMA ID','dimlist',3,'p_dimlist_list','cvxParser.py',145),
  ('dimlist -> dimlist COMMA INT','dimlist',3,'p_dimlist_list','cvxParser.py',146),
  ('dimlist -> INT','dimlist',1,'p_dimlist_singleton','cvxParser.py',152),
  ('dimlist -> ID','dimlist',1,'p_dimlist_singleton','cvxParser.py',153),
  ('idlist -> idlist ID','idlist',2,'p_idlist_list','cvxParser.py',160),
  ('idlist -> ID','idlist',1,'p_idlist_id','cvxParser.py',165),
  ('expression -> expression PLUS expression','expression',3,'p_expression_add','cvxParser.py',210),
  ('expression -> expression MINUS expression','expression',3,'p_expression_minus','cvxParser.py',214),
  ('expression -> expression DIVIDE INT','expression',3,'p_expression_divide','cvxParser.py',219),
  ('expression -> expression DIVIDE FLOAT','expression',3,'p_expression_divide','cvxParser.py',220),
  ('expression -> expression TIMES expression','expression',3,'p_expression_multiply','cvxParser.py',228),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','cvxParser.py',232),
  ('expression -> MINUS expression','expression',2,'p_expression_negate','cvxParser.py',236),
  ('expression -> expression TRANSPOSE','expression',2,'p_expression_transpose','cvxParser.py',241),
  ('expression -> FLOAT','expression',1,'p_expression_constant','cvxParser.py',246),
  ('expression -> INT','expression',1,'p_expression_constant','cvxParser.py',247),
  ('expression -> ID','expression',1,'p_expression_constant','cvxParser.py',248),
]
